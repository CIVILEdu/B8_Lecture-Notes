#############################################################################################
												Day 29
#############################################################################################
Elastic Beanstalk
------------------------
Why Elastic Beanstalk?
-----------------------------------------------
~ Makes it easy for developers to share their applicaitons accross different devices with les amount of time.

What is Elastic Beanstalk?
-----------------------------------------------
~ It is a service used to deploy and scale the web applicaitons by developers
~ Beanstalk will support different programming languages (java, php, .net, python, node.js, and docker), runtime environments

Advantages of Elastic Beanstalk:
-----------------------------------------------
~ Highly scalable - scaleup and scaledown the resources according to the user requirement
~ Fast and Simple to work with - you have to focus on development of an app
~ Qucik deployment
~ Supports multi-tenant architecture
~ Cost efficient
~ Simplifies the operations and it is also a flexible service

Components of Elastic Beanstalk:
-----------------------------------------------
1. Application: is a unique label which is used as a deployble code for web applications

2. Application Version: It resemebles a folders which stores a collection of components such as environments, versions and environment configuration.

3. Environment: In this only the current version of the application will run.
1.3.1 - Envi.1
1.3.2 - Envi.2

4. Environment Tier: It designates the type of application that the environment runs
	1. Web Tier 2. Worker Node

Architecture of Elastic Beanstalk:
-----------------------------------------------
Based on client requirements, Elastic Beanstalk provides two types of envi. tiers:
	1. Web server envi. 2. Worker envi.

~ Web server envi. is a frontend facing, that means the clients should be accessing this envi. directly.
~ Mostly web apps are deployed using envi.
~ The worker envi. is the backend of Application
~ Web server envi. handles only the HTTP/HTTPS requests from the clients
~ Worker envi. process backgroud tasks and minimizes the consumption of resources












